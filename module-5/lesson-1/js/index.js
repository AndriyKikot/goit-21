'use strict';

/* –û–û–ü –≤ js */

// const value = 5;

// const logValue = () => {
//   console.log(value + 15);
// }

// logValue();


const creature = {
  icon: 'ü¶†',
  // –ø—Ä–µ—Ñ–∏–∫—Å "_" —É—Å–ª–æ–≤–Ω–æ—Å—Ç—å –∫–æ—Ç—Ä–∞—è –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π
  _getName() {
    return 'Creature'
  },
  move() {
    console.log('I am moveing');
  },
  greet() {
    console.log(`Hello I am ${this.icon} ${this.getName()}`);
  }
}

const dog = {
  icon: 'üê∂',
  move() {
    console.log('I am moving like a dog');
  },
  greet() {
    console.log(`Hello I am ${this.icon}`);
  }
}

const cat = {
  icon: 'üòº',
  move() {
    console.log('I am moveing like a Cat');
  },
  greet() {
    console.log(`Hello I am ${this.icon}`);
  }
}

// creature.move();
// dog.move();
// cat.move();
// console.log(creature._getName());

/* –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ —Å—Ç–∞—Ä–æ—Å–ª–∞–≤—è–Ω—Å–∫–∏–π —Å–ø–æ—Å–æ–± */

const Creature = function({ icon, name }) {
  // —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤–∞–π –æ–±—ä–µ–∫—Ç —Å –∏–º–µ–Ω–µ–º this = {}
  this.icon = icon;
  this.name = name;

  // –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è, –≤—ã–¥–µ–ª—è–µ—Ç—Å—è –Ω–µ –Ω—É–∂–Ω–∞—è –ø–∞–º—è—Ç—å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞
  // this.move = function() {
  //   console.log(`I am moving ${this.name}`);
  // }

  // this.greet = function() {
  //   console.log(`Hello I am ${this.icon}`);
  // }
}

Creature.prototype.move = function() {
  console.log(`I am moving ${this.name}`);
}

Creature.prototype.greet = function() {
  console.log(`Hello I am ${this.icon}`);
}

// [[Contsruct]] - –Ω–µ—Ç –≤ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è
// [[Contsruct]] - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º new
const superCreature = new Creature({
  icon: 'ü¶†',
  name: 'superCreature'
})

// console.log(superCreature);
// superCreature.move();
// superCreature.greet();

// console.log(superCreature.__proto__.constructor === Creature );
/* –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å Dog –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç –∫–ª–∞—Å—Å–∞  Creature*/
// const Dog = function({ icon, name }) {
//   Creature.call(this, { icon, name });
// }
// // –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Ç–æ—Ç–∏–ø –∏ –≤ –Ω–µ–≥–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø—Ä–æ—Ç–æ—Ç–∏–ø Creature
// Dog.prototype = Object.create(Creature.prototype);
// // —Ç–∞–∫ –∫–∞–∫ –¥–µ–π—Å—Ç–≤–∏–µ–º –≤—ã—à–µ –º—ã –∑–∞—Ç–µ—Ä–ª–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, —Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ –µ–≥–æ –≤–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
// Dog.prototype.constructor = Dog;

// // —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –º–∞—Ö–∏–Ω–∞—Ü–∏–π –≤—ã—à–µ –º–æ–¥–µ–º –¥–æ–ø–∏—Å—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã  –∫–ª–∞—Å—Å–∞
// Dog.prototype.bark = function() {
//   console.log('I am barking');
// }

// Dog.prototype.move = function() {
//   console.log('I am moving like a dog');
// }

// const droopy = new Dog({ name: 'Droopy', icon: 'üê∂'});
// // // –Ω–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –Ω–∞ –ø—Ä—è–º—É—é __proto__
// // droopy.__proto__ = superCreature;
// droopy.move();
// droopy.bark();
// console.log(droopy);
// console.log(superCreature);

// const foo = {};
// console.log(droopy instanceof Dog);

/* –£–ª—É—á—à–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å –∫–ª–∞—Å—Å–æ–≤ */
class Hero {
  constructor(name, health, damage) {
    this.name = name;
    this.health = health;
    this.damage = damage;
  }

  attack() {
    return this.damage
  }
}

class Warrior extends Hero {
  constructor(name, health, damage) {
    super(name, health, damage);
    this.damageMultiplier = 1.2;
  }

  attack() {
    return this.damage * this.damageMultiplier
  }
}

class SuperWarrior extends Warrior {
  constructor(name, health, damage) {
    super(name, health, damage);
  }
}

const superWarrior = new SuperWarrior('Sven', 1000, 89);
console.log(superWarrior);
console.log(superWarrior.attack());

const a = new Object();
console.log(a);
